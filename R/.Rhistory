x <- seq(-3,3,le=5)
x
y <- 2 + 4*x + rnorm(5)
lm(y~x)
x <- seq(-3,3,le=5)
x
y <- 2 + 4*x + rnorm(5)
y
lm(y~x)
x <- seq(-3,3,le=5)
x
y <- 2 + 4*x + rnorm(5)
y
a <- lm(y~x)
a
summary(a)
x <- seq(-3,3,le=5)
x
y <- 2 + 4*x + rnorm(5)
y
a <- lm(y~x)
a
print("")
summary(a)
x <- rnorm(100, 0, 1)
plot(x)
x <- rnorm(100, 0, 1)
plot(x)
par()
par()
x <- rnorm(100, 0, 1)
hist(x)
x <- rnorm(100, 0, 1)
hist(x)
x <- rnorm(100, 0, 1)
hist(x)
x <- rnorm(100, 0, 1)
y <- rnorm(100, 1, 0.5)
hist(x)
x <- rnorm(100, 0, 1)
y <- rnorm(100, 1, 0.5)
hist(x)
hist(y)
x <- rnorm(100, 0, 1)
y <- rnorm(100, 1, 0.5)
hist(x, y)
x <- rnorm(100, 0, 1)
y <- rnorm(100, 1, 0.5)
hist(x)
x <- rnorm(100, 0, 1)
y <- rnorm(100, 1, 0.5)
X <- c(x, y)
hist(X)
x <- rnorm(100, 0, 1)
y <- rnorm(100, 1, 0.5)
X <- matrix(c(x, y), 100)
X
hist(X)
x <- rnorm(100, 0, 1)
y <- rnorm(100, 1, 0.5)
X <- matrix(c(x, y), 100)
hist(X)
x <- rnorm(100, 0, 1)
y <- rnorm(100, 1, 0.5)
X <- matrix(c(x, y), 100)
hist(X)
x <- rnorm(100, 0, 1)
y <- rnorm(100, 1, 0.5)
X <- matrix(c(x, y), 100)
hist(X)
x <- rnorm(100, 0, 1)
y <- rnorm(100, 1, 0.5)
X <- matrix(c(x, y), 100)
hist(X[1])
x <- rnorm(100, 0, 1)
y <- rnorm(100, 1, 0.5)
X <- matrix(c(x, y), 100)
hist(X[1,])
x <- rnorm(100, 0, 1)
y <- rnorm(100, 1, 0.5)
X <- matrix(c(x, y), 100)
hist(X[,1])
x <- rnorm(100, 0, 1)
y <- rnorm(100, 1, 0.5)
X <- matrix(c(x, y), 100)
hist(X[,1])
x <- rnorm(100, 0, 1)
y <- rnorm(100, 1, 0.5)
X <- matrix(c(x, y), 100)
hist(X[,1])
x <- rnorm(100, 0, 1)
y <- rnorm(100, 1, 0.5)
X <- matrix(c(x, y), 100)
hist(X[,1])
x <- rnorm(100, 0, 1)
y <- rnorm(100, 1, 0.5)
X <- matrix(c(x, y), 100)
hist(X[,1])
x <- rnorm(100, 0, 1)
y <- rnorm(100, 1, 0.5)
X <- matrix(c(x, y), 100)
hist(X[,1])
x <- rnorm(100, 0, 1)
y <- rnorm(100, 1, 0.5)
X <- matrix(c(x, y), 100)
hist(X[,2])
x <- rnorm(100, 0, 1)
y <- rnorm(100, 1, 0.5)
X <- matrix(c(x, y), 100)
hist(X[,2])
x <- rnorm(100, 0, 1)
y <- rnorm(100, 1, 0.5)
X <- matrix(c(x, y), 100)
hist(X[,2])
x <- rnorm(100, 0, 1)
y <- rnorm(100, 1, 0.5)
X <- matrix(c(x, y), 100)
hist(X[,2])
x <- rnorm(100, 0, 1)
y <- rnorm(100, 1, 0.5)
X <- matrix(c(x, y), 100)
hist(X[,2])
x <- rnorm(100, 0, 1)
y <- rnorm(100, 1, 0.5)
X <- matrix(c(x, y), 100)
hist(X[,2])
x <- rnorm(100, 0, 1)
y <- rnorm(100, 1, 0.5)
X <- matrix(c(x, y), 100)
hist(X[,2])
x <- rnorm(100, 0, 1)
y <- rnorm(100, 1, 0.5)
X <- matrix(c(x, y), 100)
hist(X[,2])
x <- rnorm(100, 0, 1)
y <- rnorm(100, 1, 0.5)
X <- matrix(c(x, y), 100)
hist(X[,2])
x <- rnorm(100, 0, 1)
y <- rnorm(100, 1, 0.5)
X <- matrix(c(x, y), 100)
hist(X[,1])
hist(X[,2])
x <- seq(0, 10, len=25)
x
x <- seq(0, 10, len=25)
y <- x^2
y
x <- seq(0, 10, len=25)
y <- x^2 + rnorm(25, 0, 0.1)
y
x <- seq(0, 10, len=25)
y <- x^2 + rnorm(25, 0, 0.1)
plot(x, y)
x <- seq(0, 10, len=25)
y <- x^2 + rnorm(25, 0, 0.5)
plot(x, y)
x <- seq(0, 10, len=25)
y <- x^2 + rnorm(25, 0, 1)
plot(x, y)
x <- seq(0, 10, len=25)
y <- x^2 + x*rnorm(25, 0, 1)
plot(x, y)
x <- seq(0, 10, len=25)
y <- x^2 + (1/10) * x * rnorm(25, 0, 1)
plot(x, y)
x <- seq(0, 10, len=25)
y <- x^2 + (1/10) * x * rnorm(25, 0, 5)
plot(x, y)
y <- x^2 + (1/10) * x * rnorm(25, 0, 2)
y <- x^2 + (1/10) * x * rnorm(25, 0, 2)
x <- seq(0, 10, len=25)
y <- x^2 + (1/10) * x * rnorm(25, 0, 2)
plot(x, y)
x <- seq(0, 10, len=25)
y <- x^2 + (1/10) * x * rnorm(25, 0, 2)
plot(x, y, color="red")
plot(x, y)
x <- seq(0, 10, len=25)
y <- x^2 + (1/10) * x * rnorm(25, 0, 2)
plot(x, y)
x <- seq(0, 10, len=25)
y <- x^2 + (1/10) * x * rnorm(25, 0, 2)
plot(x, y)
help(plot)
x <- seq(0, 10, len=25)
y <- x^2 + (1/10) * x * rnorm(25, 0, 2)
plot(x, y, b)
x <- seq(0, 10, len=25)
y <- x^2 + (1/10) * x * rnorm(25, 0, 2)
plot(x, y, main = "x^2 plot")
help(plot)
x <- seq(0, 10, len=25)
y <- x^2 + (1/10) * x * rnorm(25, 0, 2)
plot(x, y, main = "x^2 plot with err")
help(plot)
x <- seq(0, 10, len=25)
y <- x^2 + (1/10) * x * rnorm(25, 0, 2)
plot(x, y, main = "x^2 plot with err", type = "b")
help(plot)
x <- seq(0, 10, len=25)
y <- x^2 + (1/10) * x * rnorm(25, 0, 2)
plot(x, y, main = "x^2 plot with err",)
help(plot)
x <- seq(0, 10, len=25)
y <- x^2 + (1/10) * x * rnorm(25, 0, 2)
plot(x, y, main = "x^2 plot with err",)
help("fitted")
lm(y~x, x, y)
x <- seq(0, 10, len=25)
y <- x^2 + (1/10) * x * rnorm(25, 0, 2)
plot(x, y, main = "x^2 plot with err",)
help("fitted")
lm(y~x, x, y)
x <- seq(0, 10, len=25)
y <- x^2 + (1/10) * x * rnorm(25, 0, 2)
plot(x, y, main = "x^2 plot with err",)
help("fitted")
lm(y~x)
x <- seq(0, 10, len=25)
y <- x^2 + (1/10) * x * rnorm(25, 0, 2)
plot(x, y, main = "x^2 plot with err",)
help("fitted")
lm(y~=x^2)
x <- seq(0, 10, len=25)
y <- x^2 + (1/10) * x * rnorm(25, 0, 2)
plot(x, y, main = "x^2 plot with err",)
help("fitted")
lm(y=x^2)
x <- seq(0, 10, len=25)
y <- x^2 + (1/10) * x * rnorm(25, 0, 2)
plot(x, y, main = "x^2 plot with err",)
help("fitted")
lm(y~x^2)
x <- seq(0, 10, len=25)
y <- x^2 + (1/10) * x * rnorm(25, 0, 2)
plot(x, y, main = "x^2 plot with err",)
help("fitted")
lm(x^2)
x <- seq(0, 10, len=25)
y <- x^2 + (1/10) * x * rnorm(25, 0, 2)
plot(x, y, main = "x^2 plot with err",)
help("fitted")
lm(x^2)
x <- seq(0, 10, len=25)
y <- x^2 + (1/10) * x * rnorm(25, 0, 2)
plot(x, y, main = "x^2 plot with err",)
help("fitted")
lm(x^2-y)
x <- seq(0, 10, len=25)
y <- x^2 + (1/10) * x * rnorm(25, 0, 2)
plot(x, y, main = "x^2 plot with err",)
help("fitted")
lm(y~x^2)
x <- seq(0, 10, len=25)
y <- x^2 + (1/10) * x * rnorm(25, 0, 2)
plot(x, y, main = "x^2 plot with err",)
x <- seq(0, 10, len=25)
y <- x^2 + (1/10) * x * rnorm(25, 0, 2)
plot(x, y, main = "x^2 plot with err")
f <- fitModel(y ~ A * x^2 + B)
x <- seq(0, 10, len=25)
y <- x^2 + (1/10) * x * rnorm(25, 0, 2)
plot(x, y, main = "x^2 plot with err")
f <- lm(y ~ A * x^2 + B)
x <- seq(0, 10, len=25)
y <- x^2 + (1/10) * x * rnorm(25, 0, 2)
plot(x, y, main = "x^2 plot with err")
f <- fitted(y ~ A * x^2 + B)
x <- seq(0, 10, len=25)
y <- x^2 + (1/10) * x * rnorm(25, 0, 2)
plot(x, y, main = "x^2 plot with err")
f <- fitted(y ~ A * x^2 + B)
x <- seq(0, 10, len=25)
y <- x^2 + (1/10) * x * rnorm(25, 0, 2)
plot(x, y, main = "x^2 plot with err")
f <- fitted(y ~ A * x^2 + B)
f
x <- seq(0, 10, len=25)
y <- x^2 + (1/10) * x * rnorm(25, 0, 2)
plot(x, y, main = "x^2 plot with err")
f <- fitted(y ~ A * x^2 + B)
f(x)
x <- seq(0, 10, len=25)
y <- x^2 + (1/10) * x * rnorm(25, 0, 2)
plot(x, y, main = "x^2 plot with err")
f <- fitted(y ~ A * x^2 + B)
f(x) ~ x
x <- seq(0, 10, len=25)
y <- x^2 + (1/10) * x * rnorm(25, 0, 2)
plot(x, y, main = "x^2 plot with err")
sqrnt = function(y) {
x=y/2
while (abs(x*x-y) > 1e-10) x=(x+y/x)/2
x
}
sqrnt = function(y) {
x=y/2
while (abs(x*x-y) > 1e-10) x=(x+y/x)/2
x
}
srnt(10)
sqrnt = function(y) {
x=y/2
while (abs(x*x-y) > 1e-10) x=(x+y/x)/2
x
}
sqrnt(10)
sqrnt = function(y) {
x=y/2
while (abs(x*x-y) > 1e-10)
x=(x+y/x)/2
x
}
sqrnt(10)
#Packages are installed with install.packages("package name")
#Packages are called with the library function()
library(combinat)
library(datasets)
library(MASS)
library(coda)
library(mcsm)
#Packages are installed with install.packages("package name")
#Packages are called with the library function()
library(combinat)
library(datasets)
library(MASS)
library(coda)
library(mcsm)
demo(Chapter.1)
#Packages are installed with install.packages("package name")
#Packages are called with the library function()
library(combinat)
library(datasets)
library(MASS)
library(coda)
library(mcsm)
#Packages are installed with install.packages("package name")
#Packages are called with the library function()
library(combinat)
library(datasets)
library(MASS)
library(coda)
library(mcsm)
demo(Chapter.1)
rm(list = ls())
rm(list =ls())
rm(list =ls())
#Function c() concatenates terms together, it can concatenate number
#as well as other vectors
a<-c(10, 20, 20, 10)
#Function str() show the structure of an object
a; str(a)
rm(list =ls())
library(combinat)
library(datasets)
library(MASS)
library(coda)
library(mcsm)
library(combinat)
library(datasets)
library(MASS)
library(coda)
library(mcsm)
a <- runif(100, min = 2, max = 5)
a <- runif(100, min = 2, max = 5)
a
a <- runif(100, min = 2, max = 5)
hist(a)
a <- runif(1000, min = 2, max = 5)
hist(a)
# runif(N, min, max)
a <- runif(10000, min = 2, max = 5)
hist(a)
N = 10^4
b <- runif(N)
b1 = b[-N]
b2 = x[-1]
N = 10^4
b <- runif(N)
b1 = b[-N]
b2 = b[-1]
par(mfrow = c(1,3))
hist(b)
plot(b1, b2)
acf(b)
N = 10^4
U = runif(N)
X = -log(U)
Y = rexp(N)
par(mfrow=c(1,2))
hist(X, main = "Exp from Uniform")
hist(Y, main = "Expr from R")
N = 10^4
U = runif(N)
X = -log(U)
Y = rexp(N)
par(mfrow=c(1,2))
hist(X, main = "Exp from Uniform")
hist(Y, main = "Exp from R")
U = runif(3 * 10^4)
U = matrix(U, nrow = 3)
U
U = runif(3 * 10^4)
U = matrix(U, nrow = 3)
U = runif(3 * 10^4)
U = matrix(U, nrow = 3)
X = -log(U)
X = 2 * apply(X, 2, sum)
U = runif(3 * 10^4)
U = matrix(U, nrow = 3)
X = -log(U)
X = 2 * apply(X, 2, sum)
X
U = runif(3 * 10^4)
U = matrix(U, nrow = 3)
X = -log(U)
X = 2 * apply(X, 2, sum)
N =  10^4; lambda = 100
spread = 3*sqrt(lambda)
t = round(seq(max(0, lambda - spread), lambda + spread, 1))
prob = ppois(t, lambda)
for (in 1:N)
N =  10^4; lambda = 100
spread = 3*sqrt(lambda)
t = round(seq(max(0, lambda - spread), lambda + spread, 1))
prob = ppois(t, lambda)
for (i in 1:N)
{
u = runif(1)
X[i] = t[1] + sum(prob < u)
}
N =  10^4; lambda = 100
spread = 3*sqrt(lambda)
t = round(seq(max(0, lambda - spread), lambda + spread, 1))
prob = ppois(t, lambda)
for (i in 1:N)
{
u = runif(1)
X[i] = t[1] + sum(prob < u)
}
X
N =  10^4; lambda = 100
spread = 3*sqrt(lambda)
t = round(seq(max(0, lambda - spread), lambda + spread, 1))
prob = ppois(t, lambda)
for (i in 1:N)
{
u = runif(1)
X[i] = t[1] + sum(prob < u)
}
N = 10^4
n = 6; p = 0.3
y = rgamma(N, n, rate = p/(1-p))
x = rpois(N, y)
hist(x, breaks = 40, col="grey")
N = 10^4
n = 6; p = 0.3
y = rgamma(N, n, rate = p/(1-p))
x = rpois(N, y)
hist(x, breaks = 40, col="grey")
lines(1:50, dnbinom(1:50, n, p), lwd = 2, col="sienna")
N = 10^4
n = 6; p = 0.3
y = rgamma(N, n, rate = p/(1-p))
x = rpois(N, y)
hist(x, breaks = 40, col="grey")
lines(1:50, dnbinom(1:50, n, p), lwd = 2, col="sienna")
N = 10^4
n = 6; p = 0.3
y = rgamma(N, n, rate = p/(1-p))
x = rpois(N, y)
hist(x, breaks = 40, col="grey")
lines(1:50, dnbinom(1:50, n, p), lwd = 2, col="sienna")
N = 10^4
n = 6; p = 0.3
y = rgamma(N, n, rate = p/(1-p))
x = rpois(N, y)
#hist(x, breaks = 40, col="grey")
lines(1:50, dnbinom(1:50, n, p), lwd = 2, col="sienna")
N = 10^4
n = 6; p = 0.3
y = rgamma(N, n, rate = p/(1-p))
x = rpois(N, y)
#hist(x, breaks = 40, col="grey")
plot.new()
lines(1:50, dnbinom(1:50, n, p), lwd = 2, col="sienna")
N = 10^4
n = 6; p = 0.3
y = rgamma(N, n, rate = p/(1-p))
x = rpois(N, y)
#hist(x, breaks = 40, col="grey")
lines(1:50, dnbinom(1:50, n, p), lwd = 2, col="sienna")
N = 10^4
n = 6; p = 0.3
y = rgamma(N, n, rate = p/(1-p))
x = rpois(N, y)
hist(x, breaks = 40, col="grey")
lines(1:50, dnbinom(1:50, n, p), lwd = 2, col="sienna")
N = 10^4
n = 6; p = 0.3
y = rgamma(N, n, rate = p/(1-p))
x = rpois(N, y)
hist(x, main="", breaks = 40, col="grey")
lines(1:50, dnbinom(1:50, n, p), lwd = 2, col="sienna")
N = 10^4
n = 6; p = 0.3
y = rgamma(N, n, rate = p/(1-p))
x = rpois(N, y)
hist(x, main="", freq=F, breaks = 40, col="grey")
lines(1:50, dnbinom(1:50, n, p), lwd = 2, col="sienna")
rm(list =ls())
